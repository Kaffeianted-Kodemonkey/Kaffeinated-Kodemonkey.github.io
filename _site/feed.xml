<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-08-10T20:21:42-06:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Your awesome title</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">Advocacy Trends</title><link href="http://localhost:4000/Advocacy_Trends_Series/test" rel="alternate" type="text/html" title="Advocacy Trends" /><published>2024-07-28T09:04:14-06:00</published><updated>2024-07-28T09:04:14-06:00</updated><id>http://localhost:4000/Advocacy_Trends_Series/test</id><content type="html" xml:base="http://localhost:4000/Advocacy_Trends_Series/test"><![CDATA[You’ll find this post in your `_posts` directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run `jekyll serve`, which launches a web server and auto-regenerates your site when a file is updated.

Jekyll requires blog post files to be named according to the following format:

`YEAR-MONTH-DAY-title.MARKUP`

Where `YEAR` is a four-digit number, `MONTH` and `DAY` are both two-digit numbers, and `MARKUP` is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.

Jekyll also offers powerful support for code snippets:

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">def</span> <span class="nf">print_hi</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
  <span class="nb">puts</span> <span class="s2">"Hi, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">"</span>
<span class="k">end</span>
<span class="n">print_hi</span><span class="p">(</span><span class="s1">'Tom'</span><span class="p">)</span>
<span class="c1">#=&gt; prints 'Hi, Tom' to STDOUT.</span></code></pre></figure>

Check out the [Jekyll docs][jekyll-docs] for more info on how to get the most out of Jekyll. File all bugs/feature requests at [Jekyll’s GitHub repo][jekyll-gh]. If you have questions, you can ask them on [Jekyll Talk][jekyll-talk].

[jekyll-docs]: https://jekyllrb.com/docs/home
[jekyll-gh]:   https://github.com/jekyll/jekyll
[jekyll-talk]: https://talk.jekyllrb.com/]]></content><author><name></name></author><category term="Advocacy" /><category term="Trends" /><summary type="html"><![CDATA[You’ll find this post in your `_posts` directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run `jekyll serve`, which launches a web server and auto-regenerates your site when a file is updated.]]></summary></entry><entry><title type="html">WCAG &amp;amp; Preparing for the Future</title><link href="http://localhost:4000/ChatterRoom/Foundational_Concepts_Series/week1" rel="alternate" type="text/html" title="WCAG &amp;amp; Preparing for the Future" /><published>2024-07-28T09:04:14-06:00</published><updated>2024-07-28T09:04:14-06:00</updated><id>http://localhost:4000/ChatterRoom/Foundational_Concepts_Series/week1</id><content type="html" xml:base="http://localhost:4000/ChatterRoom/Foundational_Concepts_Series/week1"><![CDATA[<h2>Making the Web A11y for Everyone</h2>
<p>Imagine a world where everyone, regardless of their abilities, can navigate the web effortlessly. That’s the goal behind the Web
Content Accessibility Guidelines (WCAG) by the World Wide Web Consortium (W3C). These guidelines ensure web content is accessible to
all users, including those with disabilities.</p>

<h2>The Foundation of A11y</h2>
<p>In 2008, WCAG 2.0 introduced the POUR principles, a framework for developers and accessibility experts:</p>

<ul>
  <li><strong>Perceivable:</strong> Present information in ways that users can perceive, such as text alternatives for non-text content and captions for multimedia.</li>
  <li><strong>Operable:</strong> Ensure user interface components and navigation are operable, like making all functionality available from a keyboard and allowing enough time to read and use content.</li>
  <li><strong>Understandable:</strong> Make information and the operation of the user interface understandable. This means readable text, predictable web pages, and the ability to avoid and correct mistakes.</li>
  <li><strong>Robust:</strong> Ensure content is robust enough to be interpreted reliably by various user agents, including assistive technologies.</li>
</ul>

<p>Following these principles helps make websites more user-friendly and inclusive.</p>

<img align="right" src="/assets/img/blog-series/WCAG_Blog1_background.jpg" width="40%" class="img-thumbnail">

<div class="newsletter">
  <h6 class="text-center">Joing the Chatter Room <br>Keep up on A11y in the news!</h6>
  <p class="text-center"><a href="#" class="btn btn-md btn-danger" target="_blank"><i class="bi bi-plus-circle"></i> Join Newsletter</a>
</div>
<h2>Evolution of WCAG</h2>
<ul>
  <li><strong>WCAG 2.0 (2008)</strong> Introduced the foundational POUR principles.</li>
  <li><strong>WCAG 2.1 (2018)</strong> Extended guidelines to improve accessibility for mobile users and individuals with disabilities.</li>
  <li><strong>WCAG 2.2 (2021)</strong> The latest version focuses on enhancing accessibility, especially for those with cognitive and learning disabilities.</li>
  <li><strong>Future Version: WCAG 3.0</strong> Expected to provide more flexible guidelines, focus on user needs, and offer improved testing methods.</li>
</ul>

<h2>Key Updates in WCAG 2.2</h2>
<p>WCAG 2.2 provides additional success criteria since WCAG 2.1. The 2.0 and 2.1 success criteria are essentially the same in
2.2, with one exception: 4.1.1 Parsing is obsolete and removed from WCAG 2.2. More information can be found in
<a href="https://www.w3.org/WAI/standards-guidelines/wcag/faq/#parsing411" target="_blank">WCAG 2 FAQ, 4.1.1 Parsing</a>. WCAG 2.2 includes
notes about different languages; more information is in <a href="https://www.w3.org/WAI/standards-guidelines/wcag/faq/#i18n22" target="_blank">WCAG 2 FAQ, internationalization</a>.</p>

<p>WCAG 2.2 introduces new success criteria to further enhance accessibility:</p>

<ul>
  <li><strong>Focus Appearance:</strong> Ensures focus indicators are clearly visible, aiding navigation of interactive elements.</li>
  <li><strong>Dragging Movements - Target size:</strong> Adjusted criteria ensure interactive targets, such as buttons and links, are of adequate size, making them easier to interact with.</li>
  <li><strong>Consistent help - Redudent entry:</strong> Provides consistent help mechanisms throughout a site, reducing the need for users to re-enter information.</li>
  <li><strong>Accessibility Authentication:</strong> Criteria ensure that authentication processes do not rely solely on memory or complex tasks, simplifying logins for all users.</li>
</ul>

<p>For example, the new criteria for accessible authentication help ensure users can log in without relying solely on memory or performing complex tasks. These updates reflect a growing understanding of diverse user needs and aim to make web content more usable for everyone.</p>

<h2>Integrating WCAG 2.2</h2>
<p>Integrating WCAG 2.2 into your web design and development processes can seem daunting, but the benefits are well worth
the effort. Start by conducting an accessibility audit of your existing content to identify areas for improvement.
Understanding where your site currently stands with ADA compliance will make the task less overwhelming.</p>

<ol>
  <li><strong><a href="#">Download Our Integration Checklist:</a></strong> Join our newsletter and receive instant access to our comprehensive WCAG 2.2 Integration Checklist.</li>
  <li><strong><a href="https://wave.webaim.org/" target="_blank">Use Tools like WAVE:</a></strong> The Web Accessibility Evaluation Tool (WAVE) can be incredibly helpful in identifying issues.</li>
  <li><strong><a href="https://www.w3.org/WAI/standards-guidelines/wcag/new-in-22/" target="_blank">Focus on New Success Criteria:</a></strong> Ensure visible focus indicators and appropriate target sizes for interactive elements.</li>
</ol>

<p>These enhancements improve the user experience for individuals with disabilities and overall usability, positively impacting your site's SEO.</p>

<h2>Looking Ahead: WCAG 3.0</h2>
<p>WCAG 3.0 promises more comprehensive guidelines to ensure digital content is accessible to everyone. Stay informed and continuously improve your web accessibility practices.</p>
<p>Follow our blog for detailed posts and updates on WCAG 3.0, and join us in making the web a more inclusive place for all users. For a visual breakdown of these updates, check out our infographic, and stay tuned for future posts on web accessibility.</p>

<div class="row text-center">
  <div class="col-1"></div>
 <div class="col-8 justify-content-center bg-success-subtle text-success-emphasis border border-success-subtle p-3 mb-5 mt-4 shadow rounded">
   <h3 class="fs-4">Unlock Your Free WCAG 2.2 Integration Checklist!</h3>
   <p><a href="http://localhost:4000/blog/Free-WCAG-2.2-Integration-Checklist.html"><strong><i>Join our newsletter today</i></strong></a> and receive instant access to our comprehensive WCAG 2.2 Integration Checklist. Stay updated with the
   latest web accessibility insights, tips, and best practices. Don't miss out—subscribe now and make your website accessible to all!</p>
 </div>
</div>]]></content><author><name></name></author><category term="Foundational Concepts" /><summary type="html"><![CDATA[Making the Web A11y for Everyone Imagine a world where everyone, regardless of their abilities, can navigate the web effortlessly. That’s the goal behind the Web Content Accessibility Guidelines (WCAG) by the World Wide Web Consortium (W3C). These guidelines ensure web content is accessible to all users, including those with disabilities.]]></summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/jekyll/update/2022/09/28/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2022-09-28T09:04:14-06:00</published><updated>2022-09-28T09:04:14-06:00</updated><id>http://localhost:4000/jekyll/update/2022/09/28/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2022/09/28/welcome-to-jekyll.html"><![CDATA[<p>You’ll find this post in your <code class="language-plaintext highlighter-rouge">_posts</code> directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run <code class="language-plaintext highlighter-rouge">jekyll serve</code>, which launches a web server and auto-regenerates your site when a file is updated.</p>

<p>Jekyll requires blog post files to be named according to the following format:</p>

<p><code class="language-plaintext highlighter-rouge">YEAR-MONTH-DAY-title.MARKUP</code></p>

<p>Where <code class="language-plaintext highlighter-rouge">YEAR</code> is a four-digit number, <code class="language-plaintext highlighter-rouge">MONTH</code> and <code class="language-plaintext highlighter-rouge">DAY</code> are both two-digit numbers, and <code class="language-plaintext highlighter-rouge">MARKUP</code> is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.</p>

<p>Jekyll also offers powerful support for code snippets:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">def</span> <span class="nf">print_hi</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
  <span class="nb">puts</span> <span class="s2">"Hi, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">"</span>
<span class="k">end</span>
<span class="n">print_hi</span><span class="p">(</span><span class="s1">'Tom'</span><span class="p">)</span>
<span class="c1">#=&gt; prints 'Hi, Tom' to STDOUT.</span></code></pre></figure>

<p>Check out the <a href="https://jekyllrb.com/docs/home">Jekyll docs</a> for more info on how to get the most out of Jekyll. File all bugs/feature requests at <a href="https://github.com/jekyll/jekyll">Jekyll’s GitHub repo</a>. If you have questions, you can ask them on <a href="https://talk.jekyllrb.com/">Jekyll Talk</a>.</p>]]></content><author><name>Jekyll</name></author><category term="jekyll" /><category term="update" /><summary type="html"><![CDATA[You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.]]></summary></entry></feed>